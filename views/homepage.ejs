<%- include("partials/header.ejs") %>
<form enctype="text" onsubmit="sendPostRequest(this, undefined, undefined, undefined, undefined)">
  <div>
    <label for="title">Title:</label>
      <input type="text" id="title" name="title">
  </div>
  <div>
    <label for="img">Image URL:</label>
    <input type="text" id="img" name="img">
  </div>
  <button type="submit">Post</button>
</form>
<% posts.forEach((post) => { %>
  <% if(!post.replyTo) { %>
    <div>
      <a href="/?id=<%= post.repost ? post.ogId : post.id %>">
        <% if(post.repost) { %>
        <h4><%= post.user.name %> was reposted</h4>
        <img class="pfp" src="<%= post.repost.pp %>" />
        <h3><%= post.repost.name %></h3>
        <% } else { %>
        <img class="pfp" src="<%= post.user.pp %>" />
        <h3>
          <%= post.user.name %> <%= post.reQuote ? `is Requote to
          ${post.reQuote.user.name}`: "" %>
        </h3>
        <% } %>
        <h3><%= post.time %></h3>
        <h2><%= post.title %></h2>
        <% if(post.img) %> <img src="<%= post.img %>" />
      </a>
      <% if(post.reQuote) { %>
      <div style="border: 1px solid black; width: fit-content; padding: 10px; min-width: 300px;">
        <a href="/?id=<%= post.reQuote.id %>">
          <img class="pfp" src="<%= post.reQuote.user.pp %>" />
          <h4><%= post.reQuote.user.name %></h4>
          <h4><%= post.reQuote.time %></h4>
          <h3><%= post.reQuote.title %></h3>
          <% if(post.reQuote.img) %> <img src="<%= post.reQuote.img %>" />
        </a>
      </div>
      <% } %>
      <button onclick="sendLikeRequest('<%= JSON.stringify(post) %>')">Like: <%= post.like.total %></button>
      <button onclick="sendPostRequest(undefined, undefined, undefined, '<%= post.id %>', '<%= JSON.stringify(post) %>')">Repost</button>
    </div>
<% } }); %> 
<script>
    const username = localStorage.getItem("username");
    const name = localStorage.getItem("name");
    const id = localStorage.getItem("id");
    const refresh = localStorage.getItem("refreshToken");

    if(!username) {
        window.location.href = "/login"
    }
    fetch('/madeToken', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            id: id,
            username: username,
            refreshToken: refresh
        }),
    }).then(res => res.json()).then(data => {
        sessionStorage.setItem('token', data.token); 
    });

    const token = sessionStorage.getItem('token');
    console.log(token)
    // Send a fetch request to the server for posting
    function sendPostRequest(form, replyTo, reQuote, ogId, repostPost) {
        event.preventDefault(); // Prevent default form submission
        repostPost = repostPost !== undefined ? JSON.parse(repostPost) : undefined
        const time = new Date().toLocaleDateString();
        const repost = repostPost !== undefined ? repostPost.user : undefined;
        const data = {
            id: "txtr" + Math.random().toString(16).slice(2) + "tme:" + time,
            title: repostPost !== undefined ? repostPost.title : form.querySelector("#title").value, 
            time: time,
            user: {username: username, name: name, id: id},
            like: {
                total: 0,
                users: []
            },
            replyTo: replyTo !== undefined ? JSON.parse(replyTo).id : "",
            img: repostPost !== undefined ? repostPost.img : form.querySelector("#img").value,
            ogId: ogId,
            repost: repost,
            reQuote: reQuote !== undefined ? JSON.parse(reQuote) : undefined,
        }
        fetch('/', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({data: data, token: token}),
        });
        return repostPost === undefined ? window.location.href = `/?id=${data.id}` : window.location.href = `/?id=${data.ogId}`;
    }

    // Send a fetch request to the server for liking
    function sendLikeRequest(post) {
        post = JSON.parse(post)
        fetch(`/like/`, {
            method: 'POST',
            headers: {
            'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              post: post,
              user: {
                id: id,
                username: username,
                name: name
              },
              token: token
            }),
        });
        window.location.reload();
    }

</script>
<%- include("partials/footer.ejs") %>
